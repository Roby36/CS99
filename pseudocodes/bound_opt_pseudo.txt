

Inputs: Standard inputs for procedure A_star_homotopies, variable and fixed configuration parameters,
variable and fixed path measure and fixed path measures, bound (maximum benchmark-relative admissible decimal rise for fixed path metric),
starting value for the variable configuration parameter, multiplier for the variable configuration parameter between iterations, 
maximum number of iterations, or runs of A* 

Output: optimizing configuration a,b values for each homotopy class, and corresponding fixed and variable path measure

procedure boundary_optimization:
    Initialize map config_curr = {} (homotopy class hc : current (fix_config, var_config) for hc)
    Initialize map var_curr = {} (homotopy class hc : current variable path measure for hc)
    Initialize map fix_curr = {} (homotopy class hc : current fixed path measure for hc)
    Initialize map fix_benchmark = {} (homotopy class hc : benchmark fixed path measure for hc)
    Initialize curr_it = 0          
    Initialize fix_config = 1
    Initialize var_config = 0
    Set benchmark_paths = A_star_homotopies(c(fix_config, var_config), h (triple equal sign) 0, max_hom_classes); 
    for (hc, path in benchmark_paths)
        fix_benchmark.insert{hc : path.fixed_measure}
        fix_curr.insert{hc : path.fixed_measure}
        var_curr.insert{hc : path.variable_mesure}
        config_curr.insert{hc : (fix_config, var_config)}
    Set var_config = var_start
    Initialize homotopy_classes_updated = true
    while (homotopy_classes_updated)
        if (curr_it = MAX_IT)
            break;       
        Set current_paths = A_star_homotopies(c(fix_config, var_config), h (triple equal sign) 0, max_hom_classes);        
        Set homotopy_classes_updated = false; 
        for (hc, path in current_paths)
            fix_curr.update{hc : path.fixed_measure}
            var_curr.update{hc : path.variable_mesure}
            config_curr.update{hc : (fix_config, var_config)}
            Set benchmark = fix_benchmark.get{hc}
            if (path.fixed_measure > (1.0 + bound) \cdot benchmark)
                continue
            Set homotopy_classes_updated = true;   
        curr_it++;
        var_config *= var_mult;  
    return config_curr, var_curr, fix_curr
    
